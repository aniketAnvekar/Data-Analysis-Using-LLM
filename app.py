from dotenv import load_dotenv
load_dotenv()

import streamlit as st
import os
import sqlite3

import google.generativeai as genAI


# Configuiring our API key
genAI.configure(api_key=os.getenv("GOOGLE_API_KEY"))

# Loading the model and sending a prompt to it
def get_response(question, prompt):
    model = genAI.GenerativeModel('gemini-pro')
    response = model.generate_content([prompt, question])
    return response.text

# Retrieve data from the SQL database
def read_sql_query(sql, db):
    conn = sqlite3.connect(db)
    cur = conn.cursor()
    cur.execute(sql)
    rows = cur.fetchall()
    conn.close()
    for row in rows:
        print(row)
    return rows

# Defining the prompt
prompt=[
    """
    You are an expert in converting English questions to SQL query!
    The SQL database has the name Movies and has the following columns - Movie_Name, Release_Yr, 
    Movie_Rating, Duration, IMDb_Rating, Popularity, Genre, Movie_Desc, Director, Writers, Movie_stars, Oscars_Won, Awards_Won and Nominations. \n\nFor example,\nExample 1 - How many entries of records are present?, 
    the SQL command will be something like this SELECT COUNT(*) FROM Movies;
    \nExample 2 - Tell me all the movie names who have IMDB rating greater than 8.9, 
    the SQL command will be something like this SELECT Movie_Name
    FROM Movies WHERE IMDb_Rating > 8.9; 
    also the sql code should not have ``` in beginning or end and sql word in output.
    """
]

# print(get_response("Tell me all the movie names who have IMDB rating greater than 9", prompt[0]))

# Initializing streamlit app

st.set_page_config(page_title="SQL-AI.com")
st.header("Gemini App To Retrieve SQL Data")

question=st.text_input("Input: ",key="input")

submit=st.button("Ask the question")

if submit:
    response = get_response(question, prompt[0])
    st.subheader("The SQL query generated by Gemini model is displayed below")
    st.write(response)
    print(f'Response received from Gemini model - \n {response}')
    response=read_sql_query(response,"movies.db")
    st.subheader("The Response is")
    for row in response:
        print(row)
        st.header(row)
